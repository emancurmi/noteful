{"version":3,"sources":["NotefulContext.js","Sidebar/Sidebar.js","SidebarNav/SidebarNav.js","config.js","Note/Note.js","Main/Main.js","NotePage/NotePage.js","ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App.js","index.js"],"names":["NotefulContext","React","createContext","folders","notes","deleteNote","addFolder","addNote","Sidebar","this","context","folderId","map","folder","id","folderDisplay","find","findFolder","className","key","to","folder_name","Component","contextType","defaultProps","SidebarNav","noteId","props","match","params","noteFolderId","filter","note","idForFolder","folder_id","getFolderName","type","onClick","history","goBack","name","Note","handleDeleteNote","event","fetch","config","method","then","res","ok","Error","statusText","catch","error","console","modified","slice","content","onDeleteNote","Main","notesForFolder","getNotesForFolder","note_name","date_published","NotePage","noteNum","push","noteStr","Object","values","toString","Number","getNotes","split","text","i","ValidationError","message","AddFolder","state","appError","formValid","errorCount","errors","updateErrorCount","count","forEach","val","length","setState","valid","validateEntry","value","trim","handleChange","e","target","handleSubmit","preventDefault","body","JSON","stringify","headers","json","data","onSubmit","htmlFor","onChange","disabled","AddNote","Date","touched","defaultValue","App","newNotes","addErrorNotes","setFolders","setNotes","getFolders","status","foldersError","Promise","all","notesRes","foldersRes","reject","path","exact","component","render","routeProps","onDelete","contextValue","notesError","Provider","renderSidebar","renderMain","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d314807c.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotefulContext = React.createContext ({\n    folders: [],\n    notes: [],\n    deleteNote: () => {},\n    addFolder: () => {},\n    addNote: () => {}\n})\n\nexport default NotefulContext;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport NotefulContext from '../NotefulContext';\nimport PropTypes from 'prop-types';\n\nexport default class Sidebar extends React.Component {\n\n    static contextType = NotefulContext;\n\n    render() {\n\n        const { folders = [] } = this.context\n        const folderId = folders.map(folder => folder.id)\n        const findFolder = (folders = [], folderId) =>\n            folders.find(folder => folder.id === folderId)\n\n        const folderDisplay = findFolder(folders, folderId);\n\n        return (\n            <nav className=\"nav\">\n                <div className=\"folderList\">\n                    {folders.map(folder =>\n                        <li key={folder.id} >\n                                <NavLink to={`/folder/${folder.id}`} className={folder.id === folderId ? ' active' : 'not-active'} >\n                                <h3>{folder.folder_name}</h3>\n                            </NavLink>\n                            {folderDisplay}\n                        </li>)}\n                </div>\n                <Link \n                    id='add-folder-link' \n                    to='/add-folder'>\n                        Add Folder\n                    </Link>\n            </nav>\n        )\n    }\n}\n\nSidebar.defaultProps = {\n    folders: [],\n}\n\nSidebar.propTypes = {\n    folders: PropTypes.array,\n    id: PropTypes.string,\n    name: PropTypes.string\n}","import React from 'react';\nimport NotefulContext from '../NotefulContext'\nimport PropTypes from 'prop-types';\n\nexport default class SidebarNav extends React.Component {\n    static defaultProps = {\n        history: {\n            goBack: () => { }\n        },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = NotefulContext;\n\n    render() {\n        const { notes = [], folders = [] } = this.context\n\n        const { noteId } = this.props.match.params;\n\n        const noteFolderId = notes.filter(note => note.id === noteId)\n\n        const idForFolder = folders.filter(folder => folder.id === 2)\n\n        const getFolderName = (noteId, folders = []) => (\n            (noteFolderId.folder_id === idForFolder.id)\n                ? idForFolder.map(folder => folder.folder_name)\n                : folders.filter(folder => folder.id)\n        )\n\n       const nameYet = getFolderName(noteId, folders)\n\n        return (\n            <div className=\"SidebarNav\">\n                {/* {nameYet} */}\n                <li id=\"go-back\">\n                <button\n                    type=\"button\"\n                    id=\"go-back-link\"\n                    onClick={() => this.props.history.goBack()}>\n                    Go back\n                </button>\n                </li>\n            </div>\n        )\n    }\n}\nSidebarNav.defaultProps = {\n    notes: [],\n    folders: [],\n    name: \"\"\n}\n\nSidebarNav.propTypes = {\n    notes: PropTypes.array,\n    folders: PropTypes.array,\n    name: PropTypes.string,\n    noteId: PropTypes.number\n}","export default {\n  API_ENDPOINT: `https://tnkful-noteful.herokuapp.com/api`,\n  API_NOTES: `https://tnkful-noteful.herokuapp.com/api/notes`,\n  API_FOLDERS: `https://tnkful-noteful.herokuapp.com/api/folders`,\n}\n\n//export default {\n//    API_ENDPOINT: 'http://localhost:8000/api',\n//    API_NOTES: 'http://localhost:8000/api/notes',\n//    API_FOLDERS: 'http://localhost:8000/api/folders'\n//}","import React from 'react';\nimport NotefulContext from '../NotefulContext';\nimport { Link } from 'react-router-dom';\nimport config from '../config';\n\n\nexport default class Note extends React.Component {\n    static defaultProps = {\n        handleDeleteNote: () => { },\n        onDeleteNote: () => { },\n        match: {\n            params: {}\n        }\n    }\n\n    static contextType = NotefulContext;\n\n\n    handleDeleteNote = (event) => {\n        const noteId = this.props.id\n\n        fetch(`${config.API_NOTES}/${noteId}`, {\n            method: 'DELETE',\n        })\n            .then(res => {\n                if (!res.ok) {\n                    throw new Error(res.statusText)\n                }\n            })\n            .then(() => {\n                this.context.deleteNote(noteId)\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n    }\n\n    render() {\n\n        return (\n            <div className=\"note\">\n                <div key={this.props.id}>\n                    {/* <h3> */}\n                        <Link to={`/note/${this.props.id}`}>\n                            <h3>{this.props.name}</h3>\n                        <p>Modified on {(this.props.modified).slice(0, 10)}</p>\n                        {/* <button\n                            type=\"button\"\n                            id=\"delete-note-link-little\"\n                            onClick={this.handleDeleteNote}>\n                            Delete Note\n                            </button> */}\n                        <p>{this.props.content}</p>\n                        </Link>\n                    {/* </h3> */}\n                {/* <p>\n                    {this.props.modified}\n                    Modified on {(this.props.modified).slice(0, 10)}\n                </p> */}\n                <button\n                    type=\"button\"\n                    id=\"delete-note-link-little\"\n                    onClick={this.handleDeleteNote}>\n                    Delete Note\n                            </button>\n                {/* <p>{this.props.content}</p> */}\n            </div>\n            </div >\n        )\n    }\n}\n\nNote.defaultProps = {\n    notes: [],\n    content: \"\",\n    name: \"\",\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../NotefulContext';\nimport Note from '../Note/Note'\n\nexport default class Main extends React.Component {\n    static defaultProps = {\n        match: {\n            params: {}\n        }\n    }\n    static contextType = NotefulContext\n\n    render() {\n        const { folderId } = this.props.match.params\n        const { notes } = this.context\n        const getNotesForFolder = (notes = [], folderId) => (\n            (!folderId)\n                ? notes\n                : notes.filter(note => note.folder_id === folderId)\n        )\n\n        const notesForFolder = getNotesForFolder(notes, folderId)\n        return (\n            <div className=\"mainpage__main\">\n                <ul className=\"noteList\">\n                    {notesForFolder.map(note =>\n                        <li key={note.id}>\n                            <Note\n                                id={note.id}\n                                name={note.note_name}\n                                modified={note.date_published}\n                            />\n                        </li>\n                    )}\n                </ul>\n                <Link\n                    id='add-note-link'\n                    to='/add-note'\n                >\n                    Add note\n                </Link>\n            </div>\n        );\n    }\n}","\nimport React from 'react';\nimport NotefulContext from '../NotefulContext';\nimport config from '../config';\n\n\nexport default class NotePage extends React.Component {\n\n  static contextType = NotefulContext;\n\n  handleDeleteNote = (event) => {\n    const noteNum = this.props.match.params\n    this.props.history.push(`/`)\n    const noteStr = Object.values(noteNum).toString()\n    const noteId = Number(noteStr);\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(res.statusText)\n        }\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n\n    const { notes = [] } = this.context\n    const { noteId } = this.props.match.params\n\n    const getNotes = notes\n      .filter(note => note.id === noteId)\n      .map(note => {\n        return (\n          <section className=\"notes-display\" key={note.id}>\n            <h3>{note.note_name}</h3>\n            {/* {note.date_published} */}\n            Modified on {(note.date_published).slice(0, 10)}\n            {note.content\n              .split(\"/\\n \\r|\\n/\")\n              .map((text, i) =>\n                <p key={i}>{text}</p>\n              )}\n          </section>\n        )\n      }\n      )\n\n    return (\n      <div className=\"whole-notes-display\">\n        {getNotes}\n        <button\n          type=\"button\"\n          id='delete-note-link-little'\n          onClick={() => this.handleDeleteNote(this.props.id, this.context.deleteNote)}>\n          Delete Note\n        </button>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React from 'react';\nimport config from '../config';\nimport NotefulContext from '../NotefulContext';\nimport ValidationError from '../ValidationError';\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder extends React.Component {\n    static contextType = NotefulContext;\n\n    state = {\n        appError: null,\n        formValid: false,\n        errorCount: null,\n        name: '',\n        errors: {\n\t\t\tname: 'You must enter a note title'\n        }\n    }\n\n    updateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n        \n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\t\tthis.setState({ errorCount: count });\n        let valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n    };\n    \n    validateEntry = (name, value) => {\n        let err = '';\n\n        if (name === 'name') {\n            if (value.trim().length === 0) {\n                return 'Folder name is required.'\n            } else if (name.length < 3) {\n                return \"Name must be at least 3 characters long\";\n            }\n        }\n        const { errors } = { ...this.state };\n        errors[name] = err;\n        this.setState({ errors });\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value.trim() });\n        this.validateEntry(name, value);\n        this.updateErrorCount();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.errorCount > 0) return;\n        const { name } = e.target;\n        const folder = {\n            folder_name: name.value\n        };\n\n        fetch(config.API_FOLDERS, {\n            method: 'POST',\n            body: JSON.stringify(folder),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (!res.ok) {\n                    return res.json().then(error => {\n                        throw error;\n                    });\n                }\n                return res.json();\n            })\n            .then(data => {\n                name.value = '';\n                this.context.addFolder(data);\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({ appError: error });\n            });\n\n    };\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <form className=\"addFolderForm\" onSubmit={e => this.handleSubmit(e)}>\n                    <legend><h3>Add Folder</h3></legend>\n                    <label htmlFor=\"name\"><h4>Folder Name</h4></label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"name\"\n                        onChange={this.handleChange}\n                    />\n                    {errors.name.length > 0 && (\n                        <ValidationError message={errors.name} />)}\n                    <button\n                        type=\"submit\"\n                        id=\"submit-btn\"\n                        disabled={this.state.formValid === false}\n                    >\n                        Submit\n                    </button>\n                {this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete' : 'incomplete'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n            </form>\n        );\n    }\n}\n\nAddFolder.defaultProps = {\n    folders: [],\n    content: \"\",\n    name: \"\",\n    error: null\n}\n\nAddFolder.propTypes = {\n    folders: PropTypes.array,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    content: PropTypes.string,\n    modified: PropTypes.string,\n}","import React, { Component } from 'react';\nimport NotefulContext from '../NotefulContext';\nimport config from '../config';\nimport ValidationError from '../ValidationError';\n\nexport default class AddNote extends Component {\n    static contextType = NotefulContext;\n\n    state = {\n        appError: null,\n        formValid: false,\n        errorCount: null,\n        name: '',\n        folderId: '',\n        content: '',\n        errors: {\n            folderId:\n                'You must select a folder',\n            name: 'You must enter a note title',\n            content: 'You must enter a description'\n        }\n    }\n\n    updateErrorCount = () => {\n        let errors = this.state.errors;\n        let count = 0;\n\n        Object.values(errors).forEach(val => {\n            if (val.length > 0) {\n                count++;\n            }\n        });\n        this.setState({ errorCount: count });\n        let valid = count === 0 ? true : false;\n        this.setState({ formValid: valid });\n    };\n\n    updateFolderId(folderId) {\n        this.setState({ folderId: { value: folderId, touched: true } });\n    }\n\n    validateEntry = (name, value) => {\n        let err = '';\n        if (name === 'name') {\n            if (value.length === 0) {\n                return 'Name is required.'\n            }\n            else if (name.length < 3) {\n                return \"Name must be at least 3 characters long\";\n            }\n        }\n        const { errors } = { ...this.state };\n        errors[name] = err;\n        this.setState({ errors });\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target;\n        this.setState(\n            { [name]: value.trim() },\n        );\n        this.validateEntry(name, value.trim());\n        this.updateErrorCount();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.errorCount > 0) return;\n\n        const { name, folderId, content } = e.target;\n        const note = {\n            note_name: name.value,\n            folder_id: folderId.value,\n            content: content.value,\n            modified: new Date()\n        };\n        this.setState({ appError: null });\n\n        fetch(config.API_NOTES, {\n            method: 'POST',\n            body: JSON.stringify(note),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (!res.ok) {\n                    return res.json().then(error => {\n                        throw error;\n                    });\n                }\n                return res.json();\n            })\n            .then(data => {\n                name.value = '';\n                content.value = '';\n                folderId.value = '';\n                this.context.addNote(data);\n                this.setState({ data });\n                this.props.history.push('/', data);\n            })\n            .catch(error => {\n                this.setState({ appError: error });\n            });\n    };\n\n    render() {\n        const { errors } = this.state;\n        const folders = this.context.folders;\n        if (this.state.appError) {\n            return <p className=\"error\">{this.state.appError}</p>;\n        }\n\n        return (\n            <form className=\"add-note\" onSubmit={this.handleSubmit}>\n                <legend>\n                    <h3>Add Note</h3>\n                </legend>\n                <label htmlFor=\"name\"><h4>Note Name</h4></label>\n                <input\n                    type=\"text\"\n                    className=\"add-note__name\"\n                    name=\"name\"\n                    id=\"name\"\n                    defaultValue=\"\"\n                    onChange={this.handleChange}\n                />\n\n                {errors.name.length > 0 && (\n                    <ValidationError message={errors.name} />)}\n                <label htmlFor=\"content\"><h4>Note Content</h4></label>\n                <input\n                    type=\"text\"\n                    className=\"add-note__content\"\n                    name=\"content\"\n                    id=\"content\"\n                    defaultValue=\"\"\n                    onChange={this.handleChange}\n                />\n                <select\n                    id=\"folderId\"\n                    name=\"folderId\"\n                    value={this.state.folderId}\n                    onChange={this.handleChange}\n                >\n                    <option value=\"\">Select a folder</option>\n                    {folders.map(folder => (<option key={folder.id} value={folder.id}>{folder.folder_name}</option>))}\n                </select>\n                <button\n                    type=\"submit\"\n                    id=\"submit-btn\"\n                    disabled={\n                        this.state.formValid === false\n                    }\n                >Submit\n                    </button>\n\n                {this.state.errorCount !== null ? (\n                    <p className=\"form-status\">\n                        Form is {this.state.formValid ? 'complete' : 'incomplete'}\n                    </p>\n                ) : null}\n\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar/Sidebar';\nimport SidebarNav from './SidebarNav/SidebarNav';\nimport Main from './Main/Main';\nimport NotePage from './NotePage/NotePage'\nimport NotefulContext from './NotefulContext';\nimport AddFolder from './AddFolder/AddFolder';\nimport AddNote from './AddNote/AddNote';\nimport config from './config';\nimport './App.css';\n\n\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e));\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e));\n\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders });\n      })\n      .catch(error => {\n        console.error({ error })\n      });\n  }\n\n  addFolder = folder => {\n    this.setState({\n      folders: [...this.state.folders, folder],\n    })\n  }\n\n  addNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note],\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    const newNotes = this.state.notes.filter(note => {\n      return note.id !== noteId;\n    });\n\n    this.setState({\n      notes: newNotes\n    })\n  }\n\n  addErrorNotes = error => {\n    this.setState(error);\n  };\n\n  setFolders = folders => {\n    this.setState({\n      folders,\n      error: null\n    });\n  };\n\n  setNotes = notes => {\n    this.setState({\n      notes,\n      error: null\n    });\n  };\n\n  getFolders = () => {\n    fetch(config.API_FOLDERS, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then(this.setFolders)\n      .catch(error => this.setState({ foldersError: error }));\n  };\n\n  renderMain() {\n    return (\n      <>\n      <h2>Notes</h2>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={Main}\n          />\n        ))}\n        <Route\n          path=\"/note/:noteId\"\n          render={routeProps => <NotePage {...routeProps} onDelete={this.handleDeleteNote} />}\n        />\n        <Route path=\"/add-note\" component={AddNote} />\n      </>\n    );\n  }\n\n  renderSidebar() {\n    return (\n      <>\n      <h2>Folders</h2>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={Sidebar}\n          />\n        ))}\n        <Route\n          path=\"/note/:noteId\"\n          component={SidebarNav}\n        />\n        <Route path=\"/add-folder\" component={AddFolder} />\n      </>\n    )\n  }\n\n\n\n  render() {\n    const contextValue = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.addFolder,\n      addNote: this.addNote,\n      addErrorNotes: this.addErrorNotes,\n      notesError: this.notesError\n    }\n\n    return (\n      <NotefulContext.Provider value={contextValue}>\n        <div className=\"App\">\n          <header>\n            <Link to='/'><h1>Noteful</h1></Link>\n          </header>\n          <main className=\"mainpage\">\n            <div className=\"sidebar\">\n              {this.renderSidebar()}\n            </div>\n            <div className=\"main\">\n              {this.renderMain()}\n            </div>\n          </main>\n        </div>\n      </ NotefulContext.Provider>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}